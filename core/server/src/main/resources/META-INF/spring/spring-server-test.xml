<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task.xsd">

	<aop:aspectj-autoproxy />
	<context:property-placeholder ignore-resource-not-found="true" location="classpath*:core.config.properties" />

	<context:component-scan base-package="com.framework.core" />


	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringConverter" />
			<ref bean="jsonConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>



    <bean id="stringRedisSerializer"
            class="org.springframework.data.redis.serializer.StringRedisSerializer"/>


	<!-- byte[] 转换器 -->
	<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>

	<!--字符串转换器 -->
	<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	

	<!-- json转换器 application/json -->
	<bean id="jsonConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
      <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
      <property name="features">
        <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
         <value>DisableCircularReferenceDetect</value>
        </array>
      </property>
    </bean>
    
    <bean id="DisableCircularReferenceDetect" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      <property name="staticField" value="com.alibaba.fastjson.serializer.SerializerFeature.DisableCircularReferenceDetect"></property>
    </bean>




 
    <aop:config>
        <aop:pointcut id="daoPoint"
                      expression="execution(* com.framework.core..*.dao..*.*(..)) or execution(* com.yoho.platform.dal.*.*.*(..)) or execution(* com.yoho.*.dal.*.*(..)) or execution(* com.yohobuy.platform.dal.*.*.*(..))"/>
        <aop:advisor pointcut-ref="daoPoint" advice-ref="dataSourceMethodInterceptor"/>
    </aop:config>
 
   <aop:aspectj-autoproxy proxy-target-class="true"/>
   
   
    <aop:config>
        <aop:pointcut id="serviceMethodPoint"
                      expression="(execution(* com.framework.core.test..*.*(..))) or (execution(* com.fiberhome.*.*.service.*.*(..))) "/>
        <aop:advisor pointcut-ref="serviceMethodPoint" advice-ref="serviceMethodInterceptor"/>
    </aop:config>
 

    <bean id = "TestLeaderListener" class="com.framework.core.test.zookeeper.listener.TestLeaderListener"/>
    
    <bean id = "BizDataFetcherImpl" class="com.framework.core.test.hystrix.BizDataFetcherImpl"/>
    
    <bean id="topicConsumerTest" class="com.framework.core.test.message.rabbit.TopicConsumerTest"/>
    <bean id="topicConsumerTest2" class="com.framework.core.test.message.rabbit.TopicConsumerTest2"/>
    <bean id="topicConsumerTest3" class="com.framework.core.test.message.rabbit.TopicConsumerTest3"/>
    <bean id="topicConsumerTest4" class="com.framework.core.test.message.rabbit.TopicConsumerTest4"/>
    
    <bean id="FanoutConsumerTest" class="com.framework.core.test.message.rabbit.FanoutConsumerTest"/>
    <bean id="FanoutConsumerTest2" class="com.framework.core.test.message.rabbit.FanoutConsumerTest2"/>
    <bean id="FanoutConsumerTest3" class="com.framework.core.test.message.rabbit.FanoutConsumerTest3"/>
    <bean id="FanoutConsumerTest4" class="com.framework.core.test.message.rabbit.FanoutConsumerTest4"/>

    
    
</beans>