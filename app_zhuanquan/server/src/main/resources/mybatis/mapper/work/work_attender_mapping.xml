<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.zhuanquan.app.dal.dao.work.impl.WorkAttenderDAOImpl">

	<resultMap id="BaseResultMap"
		type="com.zhuanquan.app.common.model.work.WorkAttender">
		<result column="work_id" property="workId" jdbcType="BIGINT" />
		<result column="media_source_id" property="mediaSourceId" jdbcType="BIGINT" />
		<result column="source_category" property="sourceCategory" jdbcType="INTEGER" />
		
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="author_id" property="authorId" jdbcType="BIGINT" />
		<result column="order_num" property="orderNum" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />

	</resultMap>


	<insert id="insertOrUpdateBatch" parameterType="java.util.List">
		insert into work_attender (work_id, media_source_id,
		source_category,role_code,author_id,order_num,status)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.workId}, #{item.mediaSourceId},
			#{item.sourceCategory},#{item.roleCode},#{item.authorId},#{item.orderNum},#{item.status})

		</foreach>
			on duplicate key update status = VALUES(status), order_num =VALUES(order_num);
	</insert>




	<select id="queryWorkAttender" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select * from work_attender where work_id = #{workId} and status =1;
	</select>



	<select id="queryAuthorAttendWorkIds" resultType="java.lang.Long" parameterType="java.lang.Long">
		select distinct(work_id) from work_attender where author_id = #{authorId} and status =1;
	</select>


	<select id="queryAuthorRoleCodesByAuthorId" resultType="java.lang.String" parameterType="java.lang.Long">
		select distinct(role_code) from work_attender where author_id = #{authorId} and status =1;
	</select>


	<resultMap id="PartnerBo"
		type="com.zhuanquan.app.common.view.bo.author.AuthorPartnerInfoBo">
		<result column="times" property="cooperationTimes" jdbcType="INTEGER" />
		<result column="author_id" property="authorId" jdbcType="NUMERIC" />
	</resultMap>



  
	<select id="queryAuthorPartnerInfo" resultMap="PartnerBo" parameterType="java.util.Map">
     select count(temp.author_id) as times,temp.author_id from (select author_id,work_id from work_attender where work_id in (${ids}) and author_id != #{authorId} group by author_id,work_id) temp group by temp.author_id order by times desc,temp.author_id asc;	
    </select>




</mapper>		