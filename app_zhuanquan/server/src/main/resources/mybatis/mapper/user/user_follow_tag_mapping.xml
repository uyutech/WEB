<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.zhuanquan.app.dal.dao.user.impl.UserFollowTagsMappingDAOImpl">

	<resultMap id="BaseResultMap"
		type="com.zhuanquan.app.common.model.user.UserFollowTag">
		<id column="uid" property="uid" jdbcType="INTEGER" />
		<result column="tag_id" property="tagId" jdbcType="BIGINT" />
		<result column="tag_type" property="workId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />

	</resultMap>


	<insert id="insertOrUpdateToFollowTag" parameterType="com.zhuanquan.app.common.model.user.UserFollowTag">
		insert into
		user_follow_tag (uid, tag_id,
		tag_type,status,CREATE_TIME,MODIFY_TIME)
		values(#{uid}, #{tagId},
		#{tagType},#{status},#{createTime},#{modifyTime})
		on duplicate key
		update tag_type = #{tagType},status =
		#{status},MODIFY_TIME = now()
	</insert>




	<insert id="insertOrUpdateBatchToFollowTags" parameterType="java.util.List">
		insert into user_follow_tag (uid, tag_id,
		tag_type,status,CREATE_TIME,MODIFY_TIME)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.uid}, #{item.tagId},
			#{item.tagType},#{item.status},#{item.createTime},#{item.modifyTime})

		</foreach>
			on duplicate key update status = VALUES(status), tag_type =VALUES(tag_type),MODIFY_TIME = VALUES(MODIFY_TIME);
	</insert>


	<update id="updateTagStatus" parameterType="java.util.Map">
		update user_follow_tag
		<set>
			status = #{status} ,
			MODIFY_TIME = now()
		</set>
		where uid = #{uid} and tag_id = #{tagId};

	</update>



	<select id="queryUserFollowTag" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select * from user_follow_tag where uid = #{uid} and
		status =1;
	</select>



	<select id="queryByUidAndTagId" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select * from user_follow_tag where uid = #{uid} and
		tag_id = #{tagId};
	</select>


	<select id="queryHotTagByPage" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select tag_id from user_follow_tag where status =1
		<if test="compareTime != null">		
                <![CDATA[ and create_time>= #{compareTime}   ]]>
		</if>

		<if test="ids != null">
			and tag_id not in (${ids})
		</if>

		group by tag_id order by count(uid) desc limit #{limit} offset
		#{offset};
	</select>


</mapper>		